PrependTo[$Path, 
  "../ProjectionMethodTools/ProjectionMethodToolsJava/code/"];
PrependTo[$Path, 
  "../AMASeriesRepresentation/AMASeriesRepresentation/"];

PrependTo[$Path, 
  "../ProtectedSymbols/"];
PrependTo[$Path, 
  "../mathAMA/NumericAMA"];
PrependTo[$Path, 
  "../mathAMA/SymbolicAMA"];
PrependTo[$Path, 
  "../mathAMA/AMAModel"];

(*Needs["simpleRBCModel`"]*)
Needs["Stack`"]
Needs["Stoch`"]


julMod = aMod[{ey[t], 
     pdot[t] - (0.414 pdot[t + 1] + (1 - 0.414)*pdot[t - 1] + 
        0.196 (g^2/(g - y[t]) - g) + 0.276 (g^2/(g - y[t - 1]) - g)), 
     rr[t] - (rs[t] - 0.414 pdot[t + 1] - (1 - 0.414) pdot[t - 1]), 
     rs[t] - (3 pdot[t] + y[t]), 
     y[t] - (0.304 y[t - 1] - 0.98 rr[t] - 0.315 rr[t - 1] - 
        ey[t - 1])} /. g -> 0.049];

testModel =.;
lags[testModel] = 1;
leads[testModel] = 1;
eqns[testModel] = 5;

<< rayMemoShocks0531.m;
shocks[testModel] = shk;

xData[testModel] = 
  Transpose[{Range[-0.3, 0.4, 0.01], Range[-0.6, 0.1, 0.01], 
    Range[-0.3, 0.4, 0.01], Range[-0.6, 0.1, 0.01], 
    Range[-0.3, 0.4, 0.01]}];



paperFunc = 
  Apply[Function, 
   With[{vbls = eqnVars[julMod], ll = lagLead[julMod]}, 
    With[{argVal = 
       Flatten[Table[Map[#[t + i] &, vbls], {i, -ll[[1]], ll[[2]]}]]},
      With[{theSubs = 
        Thread[argVal -> Table[Unique[], {15}]]}, {argVal /. theSubs, 
       julMod[[1]] /. theSubs}]]]];

func[testModel] = paperFunc;


With[{allVars = eqnVars[julMod], ll = lagLead[julMod]}, 
  drvsModel = ((Map[
      Function[x, 
       Map[D[x, #] &, 
        Flatten[Table[
          Through[allVars[t + i]], {i, -ll[[1]], 
           ll[[2]]}]]]], (julMod[[1]])]))];


paperDrvFunc = 
  Apply[Function, 
   With[{vbls = eqnVars[julMod], ll = lagLead[julMod]}, 
    With[{argVal = 
       Flatten[Table[Map[#[t + i] &, vbls], {i, -ll[[1]], ll[[2]]}]]},
      With[{theSubs = 
        Thread[argVal -> Table[Unique[], {15}]]}, {argVal /. theSubs, 
       drvsModel /. theSubs}]]]];

drvFunc[testModel] = paperDrvFunc;

{pvbls, pssFuncs} = steadyState[julMod];
pres = ssLinearizeAndMakeHMat[julMod, pssFuncs[[1]]];
{{af, ar}, {ab, rar}} = symbolicBiDirectionalAR[pres[]];
transMat = symbolicTransitionMatrix[ar];

{ubigvals, ubigEvs} = Eigensystem[Transpose[transMat]];
qmat = Join[af, ubigEvs[[{1}]]];
qMat[testModel] = qmat;
fp[testModel] = Table[0, {5*3}];

paperQ = blockMatrix[{{qmat, zeroMatrix[5]}}];





Timing[tryStochT = stochSim[2, 10, 30, testModel, 1, t]];
tryStochT[[1]] // Chop

tm1Res01=stochSim[2, 2, 1, testModel, 1, tMinusOne];
tm1Iter01=(aimType2[testModel,1,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tm1Xt01=compXEtm1[testModel,tm1Iter01[[-1,Range[15]]],shk[[tm1Res01[[1,2,1]]]]];


tm1Iter02=(aimType2[testModel,2,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tm1Xt02=compXEtm1[testModel,tm1Iter01[[-1,Range[15]]],shk[[tm1Res01[[1,2,1]]]]];

tRes01=stochSim[2, 2, 1, testModel, 1, t];
tIter01=(aimType2Terror[Flatten[shk[[tRes01[[1,2]]]]],testModel,1,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tIter02=(aimType2Terror[Flatten[shk[[tRes01[[1,2]]]]],testModel,2,{-0.3, -0.6, -0.3, -0.6, -0.3}]);


(*
Transpose[{tIter01[[-1,Range[15]]],tIter02[[-1,Range[15]]]}]//Chop
*)



tm1Res20=stochSim[2, 2, 1, testModel, 20, tMinusOne];
tm1Iter20=(aimType2[testModel,20,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tm1Xt20=compXEtm1[testModel,tm1Iter20[[-1,Range[15]]],shk[[tm1Res20[[1,2,1]]]]];

tRes20=stochSim[2, 2, 1, testModel, 20, t];
tIter20=(aimType2Terror[Flatten[shk[[tRes20[[1,2]]]]],testModel,20,{-0.3, -0.6, -0.3, -0.6, -0.3}]);


tm1Res25=stochSim[2, 2, 1, testModel, 25, tMinusOne];
tm1Iter25=(aimType2[testModel,25,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tm1Xt25=compXEtm1[testModel,tm1Iter25[[-1,Range[15]]],shk[[tm1Res25[[1,2,1]]]]];
tm1Iter26=(aimType2[testModel,26,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tm1Xt26=compXEtm1[testModel,tm1Iter26[[-1,Range[15]]],shk[[tm1Res25[[1,2,1]]]]];

tRes25=stochSim[2, 2, 1, testModel, 25, t];
tIter25=(aimType2Terror[Flatten[shk[[tRes25[[1,2]]]]],testModel,25,{-0.3, -0.6, -0.3, -0.6, -0.3}]);
tIter26=(aimType2Terror[Flatten[shk[[tRes25[[1,2]]]]],testModel,26,{-0.3, -0.6, -0.3, -0.6, -0.3}]);

FileTemplateApply[boo=FileTemplate["../CStochSims/docs/smallJuillardMmaExample.mtex"],"../CStochSims/docs/smallJuillardMmaExample.tex"]

(*Splice["../CStochSims/docs/smallJuillardMmaExample.mtex"]*)


(*

generateNextXTMinusOne[{testModel,20,t,xData[[1]]},{1}]




*)
